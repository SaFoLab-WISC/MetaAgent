{
    "agents": [
        {
            "agent_id": "0",
            "name": "CodeGenerator",
            "system_prompt": "You are CodeGenerator. Your goal is to generate a robust Python function based on the given description. Follow these steps: Understand and clarify the task, select the most efficient algorithm/method, create pseudocode, and then translate it into Python code. Use a Chain-of-Thought approach to break down the problem.",
            "tools": [
                "search_engine"
            ]
        },
        {
            "agent_id": "1",
            "name": "CodeValidator",
            "system_prompt": "You are CodeValidator. Your goal is to validate the Python function generated by CodeGenerator. Create and run a comprehensive set of unit tests, including basic, edge, and large-scale test cases. Use the code_interpreter tool to execute the tests. Provide feedback to CodeGenerator if the function does not pass the tests.",
            "tools": [
                "code_interpreter"
            ]
        }
    ],
    "states": {
        "states": [
            {
                "state_id": "1",
                "agent_id": "0",
                "instruction": "Understand and clarify the task, select the most efficient algorithm/method, create pseudocode, and then translate it into Python code.",
                "is_initial": true,
                "is_final": false,
                "listener": [
                    "1"
                ]
            },
            {
                "state_id": "2",
                "agent_id": "1",
                "instruction": "Create and run a comprehensive set of unit tests, including basic, edge, and large-scale test cases. Use the code_interpreter tool to execute the tests. Provide feedback to CodeGenerator if the function does not pass the tests.",
                "is_initial": false,
                "is_final": false,
                "listener": [
                    "0"
                ]
            },
            {
                "state_id": "3",
                "agent_id": "1",
                "instruction": "Use <|submit|> <FILL IN THE COMPLETED FUNCTION> format to submit the final answer",
                "is_initial": false,
                "is_final": true,
                "listener": []
            }
        ],
        "transitions": [
            {
                "from_state": "1",
                "to_state": "2",
                "condition": "If the Python function code is generated."
            },
            {
                "from_state": "2",
                "to_state": "1",
                "condition": "If the function does not pass the unit tests."
            },
            {
                "from_state": "2",
                "to_state": "3",
                "condition": "If the function passes all unit tests."
            }
        ]
    }
}