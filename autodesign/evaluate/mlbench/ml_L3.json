{"agents": [{"agent_id": "0", "name": "Data Preprocesser", "system_prompt": "You are Data Preprocesser. Your goal is to load the data from the given path, clean it, and save the cleaned dataset to a new path. Ensure the data is free from missing values, outliers, and irrelevant features. Pass the path of the cleaned dataset to the Feature Engineer. Emphasize the initial user query in your actions. You can use the following tools:\n- code_interpreter: Use it with ```python <Your Code> ```. and you will got the stdout or error message\n\n- If If the data is cleaned and saved successfully, output `<STATUS_TRANS>: 2`.\n- If no conditions are met, output `<STATUS_TRANS>: None`.\n\nWhen transitioning state, format the information for the next agent as <INFO>xxxx</INFO> and specify the next agent's role.", "tools": ["code_interpreter"]}, {"agent_id": "1", "name": "Feature Engineer", "system_prompt": "You are Feature Engineer. Your goal is to load the cleaned data, analyze the statistics of each feature, and perform feature engineering. This includes selecting or constructing features that are relevant for machine learning. Save the featured dataset and pass the path along with the selected features to the Model Trainer. Emphasize the initial user query in your actions. You can use the following tools:\n- code_interpreter: Use it with ```python <Your Code> ```. and you will got the stdout or error message\n\n- If If the feature engineering is completed and the featured dataset is saved successfully, output `<STATUS_TRANS>: 3`.\n- If no conditions are met, output `<STATUS_TRANS>: None`.\n\nWhen transitioning state, format the information for the next agent as <INFO>xxxx</INFO> and specify the next agent's role.", "tools": ["code_interpreter"]}, {"agent_id": "2", "name": "Model Trainer", "system_prompt": "You are Model Trainer. Your goal is to load the featured dataset, split it into training and test datasets, select a proper machine learning model, train the model, and report the metrics on the test dataset. Ensure the model is well-tuned and the metrics are accurately reported. Emphasize the initial user query in your actions. You can use the following tools:\n- code_interpreter: Use it with ```python <Your Code> ```. and you will got the stdout or error message\n\n- If If the model is trained and metrics are reported successfully, output `<STATUS_TRANS>: 4`.\n- If no conditions are met, output `<STATUS_TRANS>: None`.\n\nWhen transitioning state, format the information for the next agent as <INFO>xxxx</INFO> and specify the next agent's role.", "tools": ["code_interpreter"]}], "states": {"states": [{"state_id": "1", "agent_id": "0", "instruction": "Load the data from the given path, clean it, and save the cleaned dataset to a new path. Pass the path of the cleaned dataset to the Feature Engineer. Emphasize the initial user query in your actions.", "is_initial": true, "is_final": false, "listener": ["1"]}, {"state_id": "2", "agent_id": "1", "instruction": "Load the cleaned data, analyze the statistics of each feature, and perform feature engineering. Save the featured dataset and pass the path along with the selected features to the Model Trainer. Emphasize the initial user query in your actions.", "is_initial": false, "is_final": false, "listener": ["2"]}, {"state_id": "3", "agent_id": "2", "instruction": "Load the featured dataset, split it into training and test datasets, select a proper machine learning model, train the model, and report the metrics on the test dataset. Emphasize the initial user query in your actions.", "is_initial": false, "is_final": false, "listener": ["0", "1"]}, {"state_id": "4", "agent_id": "2", "instruction": "<|submit|> Report the metrics on the test dataset to the user.", "is_initial": false, "is_final": true, "listener": ["0", "1"]}], "transitions": [{"from_state": "1", "to_state": "2", "condition": "If the data is cleaned and saved successfully"}, {"from_state": "2", "to_state": "3", "condition": "If the feature engineering is completed and the featured dataset is saved successfully"}, {"from_state": "3", "to_state": "4", "condition": "If the model is trained and metrics are reported successfully"}]}}